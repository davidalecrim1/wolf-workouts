services:
  users-db-postgres:
    image: postgres:16.4-alpine3.20
    environment:
      POSTGRES_USER: ${USERS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USERS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${USERS_POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/database/users/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - wolf-workouts-network

  trainings-db-postgres:
    image: postgres:16.4-alpine3.20
    environment:
      POSTGRES_USER: ${TRAININGS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TRAININGS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TRAININGS_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/database/trainings/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - wolf-workouts-network

  pgadmin-ui:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "16543:80"
    volumes:
      - ~/.wolf-workouts-pgadmin-data:/var/lib/pgadmin
    depends_on:
      - users-db-postgres
    networks:
      - wolf-workouts-network

  users-rest-api:
    build:
      context: ./internal/users
      target: dev
    volumes:
      - ./internal/users:/app
    environment:
      - USERS_DATABASE_URL=${USERS_DATABASE_URL}
      - USERS_API_PORT=${USERS_API_PORT}
      - USERS_JWT_SECRET=${USERS_JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "${USERS_API_PORT}:${USERS_API_PORT}"
    depends_on:
      - users-db-postgres
    networks:
      - wolf-workouts-network

  trainings-rest-api:
    build:
      context: ./internal/trainings
      target: dev
    volumes:
      - ./internal/trainings:/app
    environment:
      - TRAININGS_DATABASE_URL=${TRAININGS_DATABASE_URL}
      - TRAININGS_API_PORT=${TRAININGS_API_PORT}
      - TRAININGS_JWT_SECRET=${TRAININGS_JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "${TRAININGS_API_PORT}:${TRAININGS_API_PORT}"
    depends_on:
      - trainings-db-postgres
    networks:
      - wolf-workouts-network

  trainer-db-mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./scripts/database/trainer/init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - wolf-workouts-network

  mongo-express-ui:
    image: mongo-express:latest
    depends_on:
      - trainer-db-mongodb
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=wolf-workouts-trainer-db-mongodb-1
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    networks:
      - wolf-workouts-network

  trainer-grpc-api:
    build:
      context: ./internal/trainer
      target: dev
    volumes:
      - ./internal/trainer:/app
    environment:
      - TRAINER_MONGODB_ENDPOINT=${TRAINER_MONGODB_ENDPOINT}
      - TRAINER_MONGODB_DATABASE=${TRAINER_MONGODB_DATABASE}
      - TRAINER_MONGODB_COLLECTION_HOURS=${TRAINER_MONGODB_COLLECTION_HOURS}
      - TRAINER_MONGODB_COLLECTION_DATES=${TRAINER_MONGODB_COLLECTION_DATES}
      - TRAINER_SERVER_TYPE=grpc
      - TRAINER_API_PORT=8083
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "8083:8083"
    depends_on:
      - trainer-db-mongodb
    networks:
      - wolf-workouts-network

  trainer-http-api:
    build:
      context: ./internal/trainer
      target: dev
    volumes:
      - ./internal/trainer:/app
    environment:
      - TRAINER_MONGODB_ENDPOINT=${TRAINER_MONGODB_ENDPOINT}
      - TRAINER_MONGODB_DATABASE=${TRAINER_MONGODB_DATABASE}
      - TRAINER_MONGODB_COLLECTION_HOURS=${TRAINER_MONGODB_COLLECTION_HOURS}
      - TRAINER_MONGODB_COLLECTION_DATES=${TRAINER_MONGODB_COLLECTION_DATES}
      - TRAINER_SERVER_TYPE=http
      - TRAINER_API_PORT=8082
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "8082:8082"
    depends_on:
      - trainer-db-mongodb
    networks:
      - wolf-workouts-network

networks:
  wolf-workouts-network:
    driver: bridge
